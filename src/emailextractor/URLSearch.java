/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package emailextractor;

import java.awt.HeadlessException;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.Random;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.select.Elements;

/**
 *
 * @author DAMMY
 */
public class URLSearch extends javax.swing.JPanel implements PropertyChangeListener{

    /**
     * Creates new form URLSearch
     */
    public URLSearch() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        url = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mail = new javax.swing.JTextArea();

        setLayout(new java.awt.BorderLayout());

        url.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        url.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel11.setText("e.g. https://www.linkedin.com");

        jButton1.setText("Extract");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel1.setText("Site Name:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(url, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(url, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setLayout(new java.awt.BorderLayout());

        mail.setEditable(false);
        mail.setColumns(20);
        mail.setRows(5);
        jScrollPane1.setViewportView(mail);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

 emails.clear();
        hyperlinks.clear();
        hypercount=0;
        // TODO add your handling code here:
      Data=url.getText();
        task1 = new Task1();
    task1.addPropertyChangeListener(this);
    task1.execute();        
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    
    String Data;
    StringBuilder response;
    public void getResponseCode(String urlString){
        try
        {
   
        if(!urlString.startsWith("http"))
        {
        
        JOptionPane.showMessageDialog(this, "Invalid URL. Add http:// or https:// ", "Message",JOptionPane.ERROR_MESSAGE,null);
        
        }
        else
        {
            
        URL u = new URL(urlString); 
    HttpURLConnection huc =  (HttpURLConnection)  u.openConnection(); 
   
 huc.addRequestProperty("User-Agent", "Mozilla/4.76"); 
    huc.setRequestMethod("GET"); 
    huc.connect(); 
    
        try (BufferedReader in = new BufferedReader(
                new InputStreamReader(huc.getInputStream()))) {
            String inputLine;
            response = new StringBuilder();
            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
        }
             Document doc = Jsoup.parse(response.toString());
       String input=doc.text();
       Pattern p = Pattern.compile("\\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}\\b",Pattern.CASE_INSENSITIVE);
Matcher matcher = p.matcher(input);

while(matcher.find()) {
    String email=matcher.group();
      if(EmailExist(email)==false)
      {
        emails.add(email.toLowerCase());
         mail.append(email.toLowerCase()+"\n");
      }
}
        Elements links = doc.select("a[href]");
        links.stream().map((link) -> link.attr("href").trim()).filter((hyper) -> (hyper.contains("search?q=site") && LinkExist(hyper)==false )).forEach((hyper) -> {
            hyperlinks.add(hyper);
        });
        }
        
        
        }catch(HeadlessException | IOException e)
        {
         
        }
              
}
  private boolean EmailExist(String str)
    {
        return emails.stream().anyMatch((email) -> (email.equalsIgnoreCase(str)));
    
    
    }
    
    private boolean LinkExist(String str)
    {
        return hyperlinks.stream().anyMatch((hyperlink) -> (hyperlink.equalsIgnoreCase(str)));
    
    
    }
    ArrayList<String> emails = new ArrayList<>();
     ArrayList<String> hyperlinks = new ArrayList<>();
     int hypercount=0; 
 Task1 task1;

    @Override
    public void propertyChange(PropertyChangeEvent pce) {
       
    
    }
     class Task1 extends SwingWorker<Void, Void> {
        
    /**
     * Main task. Executed in background thread.
     */
    @Override
    public Void doInBackground() {
      Random random = new Random();
      int progress = 0;
     // progressBar.setValue(0);
      // Initialize progress property.
      setProgress(0);
     
       
             
 
        try {
          Thread.sleep(random.nextInt(1000));
             //parse json data
		getResponseCode(Data);   
		
		   
         if(progress ==100) {
            
      task1.done();
         }
    
        } catch (Exception ignore) {
        }
      return null;
    }

    
    @Override
    public void done() {
        try
        {
     
      setCursor(null); // turn off the wait cursor
    
        }catch(Exception e){}
    }
  }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea mail;
    private javax.swing.JTextField url;
    // End of variables declaration//GEN-END:variables
}
