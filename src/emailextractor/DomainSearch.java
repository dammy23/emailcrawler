/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package emailextractor;

import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.Random;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

/**
 *
 * @author DAMMY
 */
public class DomainSearch extends javax.swing.JPanel implements PropertyChangeListener{

    /**
     * Creates new form DomainSearch
     */
    public DomainSearch() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
     ArrayList<String> emails = new ArrayList<>();
     ArrayList<String> hyperlinks = new ArrayList<>();
     int hypercount=0;
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mail = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        extract = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        domain = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        url = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new java.awt.BorderLayout());

        mail.setEditable(false);
        mail.setColumns(20);
        mail.setRows(5);
        jScrollPane1.setViewportView(mail);

        jPanel3.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel5.add(jPanel3, java.awt.BorderLayout.CENTER);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        extract.setText("Extract");
        extract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extractActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel10.setText("e.g. gmail.com, yahoo.com");

        domain.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        domain.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel9.setText("Mail Domain:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(domain, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(domain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel11.setText("e.g. facebook.com, linkedin.com");

        url.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        url.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel1.setText("Site Name:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(url, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(url, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(37, 37, 37)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(extract)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(extract, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel5.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        add(jPanel5, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void extractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extractActionPerformed

        emails.clear();
        hyperlinks.clear();
        hypercount=0;
        // TODO add your handling code here:
      Data="https://www.google.com/search?q=site%3A"+url.getText()+"+%40\""+domain.getText()+"\"&ie=utf-8&oe=utf-8";
        task1 = new Task1();
    task1.addPropertyChangeListener(this);
    task1.execute();

    }//GEN-LAST:event_extractActionPerformed
 String Data;
    StringBuilder response;
    public void getResponseCode(String urlString){
        try
        {
   
        if(urlString.equals(""))
        {
        
        JOptionPane.showMessageDialog(this, "Invalid Text. Remove http:// or https:// ", "Message",JOptionPane.ERROR_MESSAGE,null);
        
        }
        else
        {
            
        URL u = new URL(urlString); 
    HttpURLConnection huc =  (HttpURLConnection)  u.openConnection(); 
   
 huc.addRequestProperty("User-Agent", "Mozilla/4.76"); 
    huc.setRequestMethod("GET"); 
    huc.connect(); 
    
        try (BufferedReader in = new BufferedReader(
                new InputStreamReader(huc.getInputStream()))) {
            String inputLine;
            response = new StringBuilder();
            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
        }
             Document doc = Jsoup.parse(response.toString());
       String input=doc.text();
       Pattern p = Pattern.compile("\\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}\\b",Pattern.CASE_INSENSITIVE);
Matcher matcher = p.matcher(input);

while(matcher.find()) {
    String email=matcher.group();
      if(EmailExist(email)==false)
      {
        emails.add(email.toLowerCase());
         mail.append(email.toLowerCase()+"\n");
      }
}
        Elements links = doc.select("a[href]");
        links.stream().map((link) -> link.attr("href").trim()).filter((hyper) -> (hyper.contains("search?q=site") && LinkExist(hyper)==false )).forEach((hyper) -> {
            hyperlinks.add(hyper);
        });
        }
        if(emails.size()<100 && hypercount<hyperlinks.size())
        {
            //System.out.println("https://www.google.com"+hyperlinks.get(hypercount));
            hypercount++; 
        getResponseCode("https://www.google.com"+hyperlinks.get(hypercount-1));
       
        }
        else{
      System.out.println("Total: "+emails.size());
      }
        }catch(HeadlessException | IOException e)
        {
            String uri="http://www.ask.com/web?q=site%3A"+url.getText()+"+%40\""+domain.getText()+"\"&qsrc=0&o=0&l=dir&qo=homepageSearchBox";
       

        getResponseCodeAsk(uri);
        }
              
}
  
    
     public void getResponseCodeAsk(String urlString)  {
   try{
       System.out.print(urlString);
        if(urlString.equals(""))
        {
        
        JOptionPane.showMessageDialog(this, "Invalid Text. Remove http:// or https:// " , "Message",JOptionPane.ERROR_MESSAGE,null);
        
        }
        else
        {
            
        URL u = new URL(urlString); 
    HttpURLConnection huc =  (HttpURLConnection)  u.openConnection(); 
   
 huc.addRequestProperty("User-Agent", "Mozilla/4.76"); 
    huc.setRequestMethod("GET"); 
    huc.connect(); 
    
        try (BufferedReader in = new BufferedReader(
                new InputStreamReader(huc.getInputStream()))) {
            String inputLine;
            response = new StringBuilder();
            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
        }
             Document doc = Jsoup.parse(response.toString());
       String input=doc.text();
       Pattern p = Pattern.compile("\\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}\\b",Pattern.CASE_INSENSITIVE);
Matcher matcher = p.matcher(input);

while(matcher.find()) {
    String email=matcher.group();
      if(EmailExist(email)==false)
      {
        emails.add(email.toLowerCase());
         mail.append(email.toLowerCase()+"\n");
      }
}
        Elements links = doc.select("a[href]");
        links.stream().map((link) -> link.attr("href").trim()).filter((hyper) -> (hyper.contains("web?q=site") && LinkExist(hyper)==false )).forEach((hyper) -> {
            hyperlinks.add(hyper);
        });
        }
        if(emails.size()<100 && hypercount<hyperlinks.size())
        {
            //System.out.println("https://www.google.com"+hyperlinks.get(hypercount));
            hypercount++; 
        getResponseCodeAsk("http:"+hyperlinks.get(hypercount-1));
       
        }
        else{
      System.out.println("Total: "+emails.size());
        }
         }catch(HeadlessException | IOException e)
        {
            
            String uri="https://search.yahoo.com/search;_ylt=A0LEVyxGCWxYxXQA2Bml87UF;_ylc=X1MDOTU4MTA0NjkEX3IDMgRmcgMEZ3ByaWQDS0YxcGZlZjNTOW1HZjVsVnNFR3FfQQRuX3JzbHQDMARuX3N1Z2cDMQRvcmlnaW4Dc2VhcmNoLnlhaG9vLmNvbQRwb3MDMARwcXN0cgMEcHFzdHJsAwRxc3RybAM0MARxdWVyeQNzaXRlJTNBbGlua2VkaW4uY29tJTIwJTIyJTQweWFob28uY29tJTIyBHRfc3RtcAMxNDgzNDc1MjY0?p=site%3A"+url.getText()+"+%40\""+domain.getText()+"\"&fr=sfp&fr2=sb-top-search&iscqry=";
            getResponseCodeYahoo(uri);
        }     
}
    
    
     public void getResponseCodeYahoo(String urlString){
        try
        {
   System.out.print(urlString);
        if(urlString.equals(""))
        {
        
        JOptionPane.showMessageDialog(this, "Invalid Text. Remove http:// or https:// " , "Message",JOptionPane.ERROR_MESSAGE,null);
        
        }
        else
        {
            
        URL u = new URL(urlString); 
    HttpURLConnection huc =  (HttpURLConnection)  u.openConnection(); 
   
 huc.addRequestProperty("User-Agent", "Mozilla/4.76"); 
    huc.setRequestMethod("GET"); 
    huc.connect(); 
    
        try (BufferedReader in = new BufferedReader(
                new InputStreamReader(huc.getInputStream()))) {
            String inputLine;
            response = new StringBuilder();
            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
        }
             Document doc = Jsoup.parse(response.toString());
       String input=doc.text();
       Pattern p = Pattern.compile("\\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}\\b",Pattern.CASE_INSENSITIVE);
Matcher matcher = p.matcher(input);

while(matcher.find()) {
    String email=matcher.group();
      if(EmailExist(email)==false)
      {
        emails.add(email.toLowerCase());
         mail.append(email.toLowerCase()+"\n");
      }
}
        Elements links = doc.select("a[href]");
        links.stream().map((link) -> link.attr("href").trim()).filter((hyper) -> (hyper.contains("https://search.yahoo.com/search;") && LinkExist(hyper)==false )).forEach((hyper) -> {
            hyperlinks.add(hyper);
        });
        }
        if(emails.size()<100 && hypercount<hyperlinks.size())
        {
            //System.out.println("https://www.google.com"+hyperlinks.get(hypercount));
            hypercount++; 
        getResponseCodeYahoo(hyperlinks.get(hypercount-1));
       
        }
        else{
      System.out.println("Total: "+emails.size());
      }
        }catch(HeadlessException | IOException e)
        {
            String uri="http://www.bing.com/search?q=site%3A"+url.getText()+"+%40\""+domain.getText()+"\"&qs=n&form=QBLH&sp=-1&pq=site%3A"+url.getText()+"+%40\""+domain.getText()+"\"&sc=0-0&sk=&cvid=A34BA9E5A4D24547B9EA9FE39E22B741";
        getResponseCodeBing(uri);
        }
              
}
 
      public void getResponseCodeBing(String urlString){
        try
        {
   System.out.print(urlString);
        if(urlString.equals(""))
        {
        
        JOptionPane.showMessageDialog(this, "Invalid Text. Remove http:// or https:// " , "Message",JOptionPane.ERROR_MESSAGE,null);
        
        }
        else
        {
            
        URL u = new URL(urlString); 
    HttpURLConnection huc =  (HttpURLConnection)  u.openConnection(); 
   
 huc.addRequestProperty("User-Agent", "Mozilla/4.76"); 
    huc.setRequestMethod("GET"); 
    huc.connect(); 
    
        try (BufferedReader in = new BufferedReader(
                new InputStreamReader(huc.getInputStream()))) {
            String inputLine;
            response = new StringBuilder();
            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
        }
             Document doc = Jsoup.parse(response.toString());
       String input=doc.text();
       Pattern p = Pattern.compile("\\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}\\b",Pattern.CASE_INSENSITIVE);
Matcher matcher = p.matcher(input);

while(matcher.find()) {
    String email=matcher.group();
      if(EmailExist(email)==false)
      {
        emails.add(email.toLowerCase());
         mail.append(email.toLowerCase()+"\n");
      }
}
        Elements links = doc.select("a[href]");
        links.stream().map((link) -> link.attr("href").trim()).filter((hyper) -> (hyper.contains("search?q=site") && LinkExist(hyper)==false )).forEach((hyper) -> {
            hyperlinks.add(hyper);
        });
        }
        if(emails.size()<100 && hypercount<hyperlinks.size())
        {
            //System.out.println("https://www.google.com"+hyperlinks.get(hypercount));
            hypercount++; 
        getResponseCodeBing("https://www.bing.com"+hyperlinks.get(hypercount-1));
       
        }
        else{
      System.out.println("Total: "+emails.size());
      }
        }catch(HeadlessException | IOException e)
        {
       JOptionPane.showMessageDialog(this, "An Error Occured. Check your IP address" , "Message",JOptionPane.ERROR_MESSAGE,null);
        
        }
              
}
  
     
     
     
    private boolean EmailExist(String str)
    {
        return emails.stream().anyMatch((email) -> (email.equalsIgnoreCase(str)));
    
    
    }
    
    private boolean LinkExist(String str)
    {
        return hyperlinks.stream().anyMatch((hyperlink) -> (hyperlink.equalsIgnoreCase(str)));
    
    
    }


    Task1 task1;

    @Override
    public void propertyChange(PropertyChangeEvent pce) {
       
    
    }
     class Task1 extends SwingWorker<Void, Void> {
        
    /**
     * Main task. Executed in background thread.
     */
    @Override
    public Void doInBackground() {
      Random random = new Random();
      int progress = 0;
     // progressBar.setValue(0);
      // Initialize progress property.
      setProgress(0);
     
       
             
 
        try {
          Thread.sleep(random.nextInt(1000));
             //parse json data
		getResponseCode(Data);   
		
		   
         if(progress ==100) {
            
      task1.done();
         }
    
        } catch (Exception ignore) {
        }
      return null;
    }

    
    @Override
    public void done() {
        try
        {
     
      setCursor(null); // turn off the wait cursor
    
        }catch(Exception e){}
    }
  }
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField domain;
    private javax.swing.JButton extract;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea mail;
    private javax.swing.JTextField url;
    // End of variables declaration//GEN-END:variables
}
